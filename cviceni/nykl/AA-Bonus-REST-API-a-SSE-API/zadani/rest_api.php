<?php
//// Klasicke REST API

// zakladni nastaveni
require_once("settings.inc.php");
// zakladni funkce
require_once("base_functions.inc.php");
// prace s databazi
require_once("MyDatabase.class.php");

// poslu uzivateli HTTP hlavicky kvuli CORS
sendCORSHeaders();

// vytvorim databazi
$db = new MyDatabase();

////////////////////////////////////////////////////////////////////////
///////////  Zpracovani vstupu  //////////////////////////////////////
////////////////////////////////////////////////////////////////////////

// METHOD - velka pismena
$method = strtoupper($_SERVER["REQUEST_METHOD"]);
// ENDPOINT - pres vlastni funkci
$endpoint = getEndpointFromFriendlyURL(REST_API_URL_PREFIX);

////////////////////////////////////////////////////////

// parametry z URL adresy
$urlParams = false;
// hodnota PK z URL adresy
$urlPKValue = false;

// mam endpoint?
if($endpoint !== false){
    // defaultne bude endpoint malymi pismeny
    $endpoint = strtolower($endpoint);
    // nactu parametry z URL
    $urlParams = getParametersFromFriendlyURL($endpoint);
    // je v URL pritomen PK?
    // v URL je za nazvem endpointu, tj. prvni v poli parametru z URL
    $urlPKValue = (!empty($urlParams[0])) ? $urlParams[0] : false;
}

////////////////////////////////////////////////////////////////////////
///////////  KONEC: Zpracovani vstupu  //////////////////////////////////////
////////////////////////////////////////////////////////////////////////

var_dump($_SERVER["REQUEST_URI"]);
var_dump($method);
var_dump($endpoint);
var_dump($urlPKValue);
var_dump($urlParams);


// TODO - veskere chyby uzivateli oznamujte v poli:
//        ["state" => 1/0, "msg" => "..."]
//      - soucasne pouzivejte vhodne HTTP statusy.
//      - pro debug si do pole muzete doplnit libovolne dalsi atributy.

// TODO - doplnte test, zda se jedna o endpoint "zaznam" (ENDPOINT_ZAZNAM).


//////////////////////////////////////////////////////////////////////////////////////////
///////////  GET - poskytnuti zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

    // GET - poskytnuti dat - bud vsechny, nebo jeden dle PK
    // URL: [GET] www.site.cz/rest_api/zaznam/           -- seznam vsech.
    // URL: [GET] www.site.cz/rest_api/zaznam/item_PK/   -- jeden konkretni.

    // TODO - doplnte test, zda je metodou GET, a implementujte prislusnou funkcionalitu


//////////////////////////////////////////////////////////////////////////////////////////
///////////  KONEC: GET - poskytnuti zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
///////////  POST - insert zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

    // POST - ulozeni novych dat - jeden zaznam
    // URL: [POST] www.site.cz/rest_api/zaznam/

    // TODO - doplnte test, zda je metodou POST, a implementujte prislusnou funkcionalitu

    // TODO - data odeslana na server jako JSON lze nacist takto:
    //$requestData = json_decode(file_get_contents("php://input"), true);


//////////////////////////////////////////////////////////////////////////////////////////
///////////  KONEC: POST - insert zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
///////////  PUT - update zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

    // PUT - editace dat
    // URL: [PUT] www.site.cz/rest_api/zaznam/item_PK/  -- takto by to melo byt spravne (pokud PK v URL, tak PK v datech nepouzit).

    // TODO - doplnte test, zda je metodou PUT, a implementujte prislusnou funkcionalitu


//////////////////////////////////////////////////////////////////////////////////////////
///////////  KONEC: PUT - update zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
///////////  DELETE - delete zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

    // DELETE - smazani zaznamu
    // URL: [DELETE] www.site.cz/rest_api/item_name/item_PK/

    // TODO - doplnte test, zda je metodou DELETE, a implementujte prislusnou funkcionalitu


//////////////////////////////////////////////////////////////////////////////////////////
///////////  KONEC: DELETE - delete zaznamu  ////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

    // TODO - metoda neni podporovana

    // TODO - endpoint neni podporovan


?>
